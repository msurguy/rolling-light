#include "Arduino.h"

// include the AnalogMultiButton library
#include <AnalogMultiButton.h>
#include <Adafruit_NeoPixel.h>

#define PIXEL_PIN    6 // Digital IO pin connected to the NeoPixels.
#define PIXEL_COUNT 20

// define the pin you want to use
const int BUTTONS_PIN = A0;

// set how many buttons you have connected
const int BUTTONS_TOTAL = 10;

// find out what the value of analogRead is when you press each of your buttons and put them in this
// array
// you can find this out by putting Serial.println(analogRead(BUTTONS_PIN)); in your loop() and
// opening the serial monitor to see the values
// make sure they are in order of smallest to largest
const int BUTTONS_VALUES[BUTTONS_TOTAL] = { 330, 504, 611, 683, 735, 775, 805, 830, 851, 868 };

// you can also define constants for each of your buttons, which makes your code easier to read
// define these in the same order as the numbers in your BUTTONS_VALUES array, so whichever button
// has the smallest analogRead() number should come first
const int BUTTON_1  = 0;
const int BUTTON_2  = 1;
const int BUTTON_3  = 2;
const int BUTTON_4  = 3;
const int BUTTON_5  = 4;
const int BUTTON_6  = 5;
const int BUTTON_7  = 6;
const int BUTTON_8  = 7;
const int BUTTON_9  = 8;
const int BUTTON_10 = 9;

// make an AnalogMultiButton object, pass in the pin, total and values array
AnalogMultiButton buttons(BUTTONS_PIN, BUTTONS_TOTAL, BUTTONS_VALUES);

Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN, NEO_GRB + NEO_KHZ800);

// pass a fourth parameter to set the debounce time in milliseconds
// this defaults to 20 and can be increased if you're working with particularly bouncy buttons

void setup() {
  // begin serial so we can see which buttons are being pressed through the serial monitor
  Serial.begin(115200);
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  Serial.println(analogRead(BUTTONS_PIN));

  // update the AnalogMultiButton object every loop
  buttons.update();

  for (int i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, 0); // turn every third pixel off
  }

  if (buttons.isPressed(BUTTON_1))
  {
    Serial.println("Button 1 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 0, strip.Color(0, 0, 255));
    strip.setPixelColor(19, strip.Color(0, 0, 255));
    strip.show();
  }

  if (buttons.isPressed(BUTTON_2))
  {
    Serial.println("Button 2 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 1, strip.Color(0, 0, 255));
    strip.setPixelColor(18, strip.Color(0, 0, 255));
    strip.show();
  }

  if (buttons.isPressed(BUTTON_3))
  {
    Serial.println("Button 3 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 2, strip.Color(0, 0, 255));
    strip.setPixelColor(17, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_4))
  {
    Serial.println("Button 4 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 3, strip.Color(0, 0, 255));
    strip.setPixelColor(16, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_5))
  {
    Serial.println("Button 5 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 4, strip.Color(0, 0, 255));
    strip.setPixelColor(15, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_6))
  {
    Serial.println("Button 6 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 5, strip.Color(0, 0, 255));
    strip.setPixelColor(14, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_7))
  {
    Serial.println("Button 7 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 6, strip.Color(0, 0, 255));
    strip.setPixelColor(13, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_8))
  {
    Serial.println("Button 8 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 7, strip.Color(0, 0, 255));
    strip.setPixelColor(12, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_9))
  {
    Serial.println("Button 9 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 8, strip.Color(0, 0, 255));
    strip.setPixelColor(11, strip.Color(0, 0, 255));
    strip.show();
  }


  if (buttons.isPressed(BUTTON_10))
  {
    Serial.println("Button 10 is pressed");

    for (int i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, 0); // turn every third pixel off
    }

    strip.setPixelColor( 9, strip.Color(0, 0, 255));
    strip.setPixelColor(10, strip.Color(0, 0, 255));
    strip.show();
  }

  // // check if BUTTON_RED is pressed
  // if (buttons.isPressed(BUTTON_RED))
  // {
  //   Serial.println("Button red is pressed");
  // } else {
  //   // Serial.println("Button red is not pressed");
  // }

  // check if BUTTON_GREEN has just been pressed this update
  // if (buttons.onPress(BUTTON_GREEN))
  // {
  //   Serial.println("Green has been pressed");
  // }

  // check if BUTTON_GREEN has just been released this update
  // if (buttons.onRelease(BUTTON_GREEN))
  // {
  //   Serial.println("Green has been released");
  // }

  // do this if BUTTON_BLUE has been released
  // if (buttons.onRelease(BUTTON_BLUE))
  // {
  //   Serial.println("Blue has been released");
  // }

  // do this once if BUTTON_BLUE has been held for 1 second
  // if (buttons.onPressAfter(BUTTON_BLUE, 1000))
  // {
  //   Serial.println("Blue has been down for 1 second");
  // }

  // do this contantly if BUTTON_GREEN has been held down for less than a second
  // if (buttons.isPressedBefore(BUTTON_GREEN, 1000))
  // {
  //   Serial.print("Green is held for ");
  //   Serial.print(             buttons.getPressDuration());
  //   Serial.println(" ms");
  // }

  // do this contantly if BUTTON_RED has been held down for more than a second
  // if (buttons.isPressedAfter(BUTTON_RED, 1000))
  // {
  //   Serial.print("Red is held for ");
  //   Serial.print(           buttons.getPressDuration());
  //   Serial.println(" ms");
  // }

  // do this if BUTTON_BLUE was released, and it was held for 1 second or less
  // if (buttons.onReleaseBefore(BUTTON_BLUE, 1000))
  // {
  //   Serial.println("Blue has been released after less than 1 second of pressing");
  //   Serial.print("Blue was held for ");
  //   Serial.print(             buttons.getLastReleasePressDuration());
  //   Serial.println(" ms");
  // }

  // do this if BUTTON_BLUE was released, and it was held for 2 seconds or more
  // if (buttons.onReleaseAfter(BUTTON_BLUE, 2000))
  // {
  //   Serial.println("Blue has been released after at least 2 seconds of pressing");
  //   Serial.print("Blue was held for ");
  //   Serial.print(             buttons.getLastReleasePressDuration());
  //   Serial.println(" ms");
  // }

  // do this if BUTTON_BLUE has been released
  // if (buttons.onRelease(BUTTON_PURPLE))
  // {
  //   Serial.println("Purple has been released");
  // }

  //
  // More examples:
  //
  // do this once when BUTTON_BLUE is pressed, and again after 1 second
  // if(buttons.onPressAndAfter(BUTTON_BLUE, 1000)) {}
  //
  // do this once if BUTTON_BLUE is held for 1 second, and again every 0.5 seconds after that
  // if(buttons.onPressAfter(BUTTON_BLUE, 1000, 500)) {}
  //
  // do this once when BUTTON_BLUE is pressed, and again after 1 second, and again every 0.5 seconds
  // after that
  // useful for cursors or scrolling through menu items
  // if(buttons.onPressAndAfter(BUTTON_BLUE, 1000, 500)) {}
  //

  // delay(10);
}
